---
import fetchAnimeData from "../functions/fetchAnimeData";
import Layout from "../layouts/Layout.astro";

const animeID = Astro.url.searchParams.get("n") || "";
const anime = await fetchAnimeData(animeID);
---

<Layout title="">
  {
    !animeID && (
      <main>
        <section>No search params found</section>
      </main>
    )
  }
  {
    animeID && !anime && (
      <section>
        <div>Something went wrong</div>
      </section>
    )
  }
  {
    animeID && anime && (
      <main>
        <section class="main">
          <div class="banner">
            <img
              src={anime.banner}
              alt={anime.titleEnglish}
              width="100%"
              height="100%"
              transition:name={`banner-${anime.id}`}
            />
          </div>
          <div class="main-details">
            <div class="title card-colored">
              <p class="english">{anime.titleEnglish}</p>
              <p class="japanese">{anime.title}</p>
            </div>
            <div class="description card-bordered">
              <p class="card-title font-style-heading">DESCRIPTION</p>
              <p class="text">{anime.description}</p>
            </div>
            <div class="score card-colored">
              <p class="card-title font-style-heading">SCORE</p>
              <p>{anime.score}</p>
            </div>
            <div class="type card-bordered">
              <p class="card-title font-style-heading">TYPE</p>
              <p>{anime.type}</p>
            </div>
            <div class="source card-bordered">
              <p class="card-title font-style-heading">SOURCE</p>
              <p>{anime.source}</p>
            </div>
            <div class="status card-colored">
              <p class="card-title font-style-heading">STATUS</p>
              <p>{anime.status}</p>
            </div>
            <div class="season-year card-colored">
              <p class="card-title font-style-heading">
                {anime.season.toUpperCase()}
              </p>
              <p class="card-title font-style-heading">{anime.year}</p>
            </div>
            <div class="genres card-bordered">
              <p class="card-title font-style-heading">GENRES</p>
              <p class="text">{anime.genres.join(" | ")}</p>
            </div>
          </div>
        </section>
      </main>
    )
  }
</Layout>

<style>
  main {
    --padding: 0.5rem;
    --banner-width: 15rem;
    --border-radius: 0.5rem;
    --card-heading: 0.85rem;
    --card-padding: 0.5rem;
    --english-title: 1.5rem;
    --japanese-title: 1rem;
    --grid-gap: 0.25rem;
  }

  .card-colored {
    background-color: var(--card-background);
    border-radius: var(--border-radius);
    padding: var(--card-padding);
  }

  .card-title {
    font-weight: 800;
    font-size: var(--card-heading);
    letter-spacing: 0.2em;
  }

  .card-bordered {
    border: 2px solid var(--card-border);
    border-radius: var(--border-radius);
    padding: var(--card-padding);
  }
  .main {
    display: flex;
    flex-direction: column;
    padding: var(--padding);
  }
  .banner {
    margin: 0.5rem auto;
    width: var(--banner-width);
    aspect-ratio: 5/7;
  }

  .main-details {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    grid-template-rows: repeat(16, 2rem);
    gap: var(--grid-gap);
  }

  .title {
    grid-column: 1/13;
    grid-row: 1/4;

    display: flex;
    justify-content: center;
    flex-direction: column;
    text-align: center;
  }

  .title .english {
    font-size: var(--english-title);
    font-weight: 800;

    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    line-clamp: 2;
    -webkit-box-orient: vertical;
  }
  .title .japanese {
    font-size: var(--japanese-title);
    font-weight: 600;
    color: gray;

    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 1;
    line-clamp: 1;
    -webkit-box-orient: vertical;
  }

  .description {
    grid-column: 1/7;
    grid-row: 4/8;
  }

  .description .text {
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 4;
    line-clamp: 4;
    -webkit-box-orient: vertical;
  }
  .score {
    grid-column: 7/10;
    grid-row: 4/6;
  }
  .type {
    grid-column: 10/13;
    grid-row: 4/6;
  }

  .source {
    grid-column: 1/4;
    grid-row: 8/10;
  }

  .status {
    grid-column: 7/13;
    grid-row: 6/8;
  }
  .season-year {
    grid-column: 4/7;
    grid-row: 8/10;
  }

  .genres {
    grid-column: 7/13;
    grid-row: 8/12;
  }
</style>

<script></script>
